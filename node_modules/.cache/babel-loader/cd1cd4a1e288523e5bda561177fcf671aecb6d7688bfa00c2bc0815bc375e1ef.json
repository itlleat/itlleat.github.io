{"ast":null,"code":"var _jsxFileName = \"/Users/HOME/Desktop/react-portfolio-new/refact-olio/my-app/src/components/PortfolioContainer.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Collapse from '@mui/material/Collapse';\n// import Footer from './Footer';\n// import Project from './Project';\n// import { DarkModeSwitch } from 'react-toggle-dark-mode';\n// import Menu from './Menu';\n// import Technologies from './Technologies';\n\n// export default function PortfolioContainer() {\n\n//   const defaultProperties = {\n//     dark: {\n//       circle: {\n//         r: 9,\n//       },\n//       mask: {\n//         cx: '50%',\n//         cy: '23%',\n//       },\n//       svg: {\n//         transform: 'rotate(40deg)',\n//       },\n//       lines: {\n//         opacity: 0,\n//       },\n//     },\n//     light: {\n//       circle: {\n//         r: 5,\n//       },\n//       mask: {\n//         cx: '100%',\n//         cy: '0%',\n//       },\n//       svg: {\n//         transform: 'rotate(90deg)',\n//       },\n//       lines: {\n//         opacity: 1,\n//       },\n//     },\n//     springConfig: { mass: 4, tension: 250, friction: 35 },\n//   };\n\n//   const [isDarkMode, setDarkMode] = useState(false);\n//   const [collapsed, setCollapsed] = useState(!isDarkMode);\n\n//   const toggleDarkMode = (checked) => {\n//     setDarkMode(checked);\n//     setCollapsed(!checked);\n//   };\n\n//   const containerClassName = `${isDarkMode ? 'dark-mode' : 'light-mode'} ${collapsed ? 'collapsed' : ''}`;\n\n//   return (\n//     <div>\n//       <div className={containerClassName}>\n//         <DarkModeSwitch\n//           className='switch'\n//           style={{ marginTop: '1rem', marginRight: '1rem' }}\n//           checked={isDarkMode}\n//           onChange={toggleDarkMode}\n//           size={50}\n//           defaultProperties={defaultProperties}\n//         />\n\n//         <Menu className='menu' />\n//         <Collapse in={collapsed} collapsedSize={40}>\n//           <div className=\"content\">\n//             {/* Content to be collapsed */}\n//             {/* Example: Changing the background color */}\n//             <div className=\"background-color\" />\n//           </div>\n//         </Collapse>\n//         <Technologies />\n//         <Project />\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport Footer from './Footer';\nimport Project from './Project';\nimport Menu from './Menu';\nimport Technologies from './Technologies';\nimport DarkModeSwitch from './DarkModeSwitch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  _s();\n  const [isDarkMode, setDarkMode] = useState(false);\n  const [collapsed, setCollapsed] = useState(!isDarkMode);\n  const toggleDarkMode = checked => {\n    setDarkMode(checked);\n    setCollapsed(!checked);\n  };\n  const containerClassName = `portfolio-container ${isDarkMode ? 'dark-mode' : 'light-mode'} ${collapsed ? 'collapsed' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerClassName,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        className: \"menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: collapsed,\n        collapsedSize: 40,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"background-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Technologies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(PortfolioContainer, \"ewQgXYhP0RXd9vHK+Vs36DpCdAw=\");\n_c = PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["React","useState","Collapse","Footer","Project","Menu","Technologies","DarkModeSwitch","jsxDEV","_jsxDEV","PortfolioContainer","_s","isDarkMode","setDarkMode","collapsed","setCollapsed","toggleDarkMode","checked","containerClassName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","in","collapsedSize","_c","$RefreshReg$"],"sources":["/Users/HOME/Desktop/react-portfolio-new/refact-olio/my-app/src/components/PortfolioContainer.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Collapse from '@mui/material/Collapse';\n// import Footer from './Footer';\n// import Project from './Project';\n// import { DarkModeSwitch } from 'react-toggle-dark-mode';\n// import Menu from './Menu';\n// import Technologies from './Technologies';\n\n// export default function PortfolioContainer() {\n\n \n\n//   const defaultProperties = {\n//     dark: {\n//       circle: {\n//         r: 9,\n//       },\n//       mask: {\n//         cx: '50%',\n//         cy: '23%',\n//       },\n//       svg: {\n//         transform: 'rotate(40deg)',\n//       },\n//       lines: {\n//         opacity: 0,\n//       },\n//     },\n//     light: {\n//       circle: {\n//         r: 5,\n//       },\n//       mask: {\n//         cx: '100%',\n//         cy: '0%',\n//       },\n//       svg: {\n//         transform: 'rotate(90deg)',\n//       },\n//       lines: {\n//         opacity: 1,\n//       },\n//     },\n//     springConfig: { mass: 4, tension: 250, friction: 35 },\n//   };\n\n//   const [isDarkMode, setDarkMode] = useState(false);\n//   const [collapsed, setCollapsed] = useState(!isDarkMode);\n\n//   const toggleDarkMode = (checked) => {\n//     setDarkMode(checked);\n//     setCollapsed(!checked);\n//   };\n\n//   const containerClassName = `${isDarkMode ? 'dark-mode' : 'light-mode'} ${collapsed ? 'collapsed' : ''}`;\n\n//   return (\n//     <div>\n//       <div className={containerClassName}>\n//         <DarkModeSwitch\n//           className='switch'\n//           style={{ marginTop: '1rem', marginRight: '1rem' }}\n//           checked={isDarkMode}\n//           onChange={toggleDarkMode}\n//           size={50}\n//           defaultProperties={defaultProperties}\n//         />\n\n//         <Menu className='menu' />\n//         <Collapse in={collapsed} collapsedSize={40}>\n//           <div className=\"content\">\n//             {/* Content to be collapsed */}\n//             {/* Example: Changing the background color */}\n//             <div className=\"background-color\" />\n//           </div>\n//         </Collapse>\n//         <Technologies />\n//         <Project />\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport Footer from './Footer';\nimport Project from './Project';\nimport Menu from './Menu';\nimport Technologies from './Technologies';\nimport DarkModeSwitch from './DarkModeSwitch';\n\nexport default function PortfolioContainer() {\n  const [isDarkMode, setDarkMode] = useState(false);\n  const [collapsed, setCollapsed] = useState(!isDarkMode);\n\n  const toggleDarkMode = (checked) => {\n    setDarkMode(checked);\n    setCollapsed(!checked);\n  };\n\n  const containerClassName = `portfolio-container ${isDarkMode ? 'dark-mode' : 'light-mode'} ${collapsed ? 'collapsed' : ''}`;\n\n\n  return (\n    <div>\n      <div className={containerClassName}>\n        <DarkModeSwitch isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />\n\n        <Menu className='menu' />\n        <Collapse in={collapsed} collapsedSize={40}>\n          <div className=\"content\">\n            {/* Content to be collapsed */}\n            {/* Example: Changing the background color */}\n            <div className=\"background-color\" />\n          </div>\n        </Collapse>\n        <Technologies />\n        <Project isDarkMode={isDarkMode} />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/HOME/Desktop/react-portfolio-new/refact-olio/my-app/src/components/DarkModeSwitch.js\";\nimport React from 'react';\nimport { DarkModeSwitch as ToggleDarkModeSwitch } from 'react-toggle-dark-mode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkModeSwitch(_ref) {\n  let {\n    isDarkMode,\n    toggleDarkMode\n  } = _ref;\n  const defaultProperties = {\n    dark: {\n      circle: {\n        r: 9\n      },\n      mask: {\n        cx: '50%',\n        cy: '23%'\n      },\n      svg: {\n        transform: 'rotate(40deg)'\n      },\n      lines: {\n        opacity: 0\n      }\n    },\n    light: {\n      circle: {\n        r: 5\n      },\n      mask: {\n        cx: '100%',\n        cy: '0%'\n      },\n      svg: {\n        transform: 'rotate(90deg)'\n      },\n      lines: {\n        opacity: 1\n      }\n    },\n    springConfig: {\n      mass: 4,\n      tension: 250,\n      friction: 35\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleDarkModeSwitch, {\n    className: \"switch\",\n    style: {\n      marginTop: '1rem',\n      marginRight: '1rem'\n    },\n    checked: isDarkMode,\n    onChange: toggleDarkMode,\n    size: 50,\n    defaultProperties: defaultProperties\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = DarkModeSwitch;\nvar _c;\n$RefreshReg$(_c, \"DarkModeSwitch\");","map":{"version":3,"names":["React","DarkModeSwitch","ToggleDarkModeSwitch","jsxDEV","_jsxDEV","_ref","isDarkMode","toggleDarkMode","defaultProperties","dark","circle","r","mask","cx","cy","svg","transform","lines","opacity","light","springConfig","mass","tension","friction","className","style","marginTop","marginRight","checked","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/HOME/Desktop/react-portfolio-new/refact-olio/my-app/src/components/DarkModeSwitch.js"],"sourcesContent":["import React from 'react';\nimport { DarkModeSwitch as ToggleDarkModeSwitch } from 'react-toggle-dark-mode';\n\nexport default function DarkModeSwitch({ isDarkMode, toggleDarkMode }) {\n  const defaultProperties = {\n    dark: {\n      circle: {\n        r: 9,\n      },\n      mask: {\n        cx: '50%',\n        cy: '23%',\n      },\n      svg: {\n        transform: 'rotate(40deg)',\n      },\n      lines: {\n        opacity: 0,\n      },\n    },\n    light: {\n      circle: {\n        r: 5,\n      },\n      mask: {\n        cx: '100%',\n        cy: '0%',\n      },\n      svg: {\n        transform: 'rotate(90deg)',\n      },\n      lines: {\n        opacity: 1,\n      },\n    },\n    springConfig: { mass: 4, tension: 250, friction: 35 },\n  };\n\n  return (\n    <ToggleDarkModeSwitch\n      className='switch'\n      style={{ marginTop: '1rem', marginRight: '1rem' }}\n      checked={isDarkMode}\n      onChange={toggleDarkMode}\n      size={50}\n      defaultProperties={defaultProperties}\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,IAAIC,oBAAoB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,eAAe,SAASH,cAAcA,CAAAI,IAAA,EAAiC;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACnE,MAAMG,iBAAiB,GAAG;IACxBC,IAAI,EAAE;MACJC,MAAM,EAAE;QACNC,CAAC,EAAE;MACL,CAAC;MACDC,IAAI,EAAE;QACJC,EAAE,EAAE,KAAK;QACTC,EAAE,EAAE;MACN,CAAC;MACDC,GAAG,EAAE;QACHC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,KAAK,EAAE;MACLT,MAAM,EAAE;QACNC,CAAC,EAAE;MACL,CAAC;MACDC,IAAI,EAAE;QACJC,EAAE,EAAE,MAAM;QACVC,EAAE,EAAE;MACN,CAAC;MACDC,GAAG,EAAE;QACHC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX;IACF,CAAC;IACDE,YAAY,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACtD,CAAC;EAED,oBACEnB,OAAA,CAACF,oBAAoB;IACnBsB,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,WAAW,EAAE;IAAO,CAAE;IAClDC,OAAO,EAAEtB,UAAW;IACpBuB,QAAQ,EAAEtB,cAAe;IACzBuB,IAAI,EAAE,EAAG;IACTtB,iBAAiB,EAAEA;EAAkB;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEN;AAACC,EAAA,GA7CuBlC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}